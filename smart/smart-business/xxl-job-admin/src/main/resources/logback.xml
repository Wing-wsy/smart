<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true -->
    <!-- scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
    <!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
    <contextName>logback</contextName>
    <property name="log.path" value="logs"></property>
    <property name="Console_Pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{50}] - %msg%n"/>

    <!-- 标准输出：控制台 -->
    <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <Pattern>${Console_Pattern}</Pattern>
            <!-- 设置字符集 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 时间滚动输出 level为 INFO 日志 -->
    <appender name="RollingFileInfo" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--引用上面变量-->
        <file>${log.path}/info.log</file>
        <encoder>
            <pattern>${Console_Pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <fileNamePattern>${log.path}/info/log-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>1MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <!-- 此日志文件只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 时间滚动输出 level为 WARN 日志 -->
    <appender name="RollingFileWarn" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/warn.log</file>
        <encoder>
            <pattern>${Console_Pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/warn/log-warn-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>1MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <!-- 此日志文件只记录warn级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>warn</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 时间滚动输出 level为 ERROR 日志 -->
    <appender name="RollingFileError" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.path}/error.log</file>
        <encoder>
            <pattern>${Console_Pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/error/log-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>1MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <!-- 此日志文件只记录ERROR级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- root指定所有的打印日志级别（如果使用<logger>标签指定了打印级别，则使用logger指定的） -->
    <!-- 从低到高为（不区分大小写）：All < Trace < Debug < Info < Warn < Error < Fatal < OFF-->
    <root level="Info">
        <appender-ref ref="Console"/>
        <appender-ref ref="RollingFileInfo"/>
        <appender-ref ref="RollingFileWarn"/>
        <appender-ref ref="RollingFileError"/>
    </root>

    <!--如果指定的包需要特殊的打印日志级别<logger>标签来改变具体某个包下打印日志的级别，否则默认使用root标签配置。-->
    <logger name="org.springframework" level="INFO" additivity="false">
        <appender-ref ref="Console"/>
        <appender-ref ref="RollingFileInfo"/>
    </logger>
    <logger name="org.mybatis" level="info"/>
    <Logger name="org.apache.catalina" level="info"/>
    <Logger name="org.apache.tomcat.util" level="info"/>


    <!--生产环境-->
    <!--启动jar包使用这个命令即可激活下面的配置
    java -jar business-admin-local.jar - -spring.profiles.active=prod -->
    <springProfile name="prod">
        <root level="error">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileInfo"/>
            <appender-ref ref="RollingFileWarn"/>
            <appender-ref ref="RollingFileError"/>
        </root>
    </springProfile>
</configuration>


        <!--<?xml version="1.0" encoding="UTF-8" ?>-->
        <!--<configuration debug="false"  xmlns="http://ch.qos.logback/xml/ns/logback"-->
        <!--               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
        <!--               xsi:schemaLocation="http://ch.qos.logback/xml/ns/logback-->
        <!--                https://raw.githubusercontent.com/enricopulatzo/logback-XSD/master/src/main/xsd/logback.xsd">-->

        <!--    <appender name="STOUT" class="ch.qos.logback.core.ConsoleAppender">-->
        <!--        <encoder>-->
        <!--            <pattern>-->
        <!--                %cyan([%thread]) %yellow(%-5level) %green(%logger{100}).%boldRed(%method)-%boldMagenta(%line) - %blue(%msg%n)-->
        <!--            </pattern>-->
        <!--        </encoder>-->
        <!--    </appender>-->

        <!--    &lt;!&ndash; additivity:false 禁止重复打印日志 &ndash;&gt;-->

        <!--    &lt;!&ndash; 让SpringBoot内部日志ERROR级别 减少日志输出 &ndash;&gt;-->
        <!--    <logger name="org.springframework" level="ERROR" additivity="false">-->
        <!--        <appender-ref ref="STOUT"/>-->
        <!--    </logger>-->

        <!--    &lt;!&ndash; 让mybatis整合包日志ERROR 减少日志输出 &ndash;&gt;-->
        <!--    <logger name="org.mybatis" level="ERROR" additivity="false">-->
        <!--        <appender-ref ref="STOUT"/>-->
        <!--    </logger>-->

        <!--    &lt;!&ndash; 让ibatis 日志ERROR 减少日志输出 &ndash;&gt;-->
        <!--    <logger name="org.apache.ibatis" level="ERROR" additivity="false">-->
        <!--        <appender-ref ref="STOUT"/>-->
        <!--    </logger>-->

        <!--    &lt;!&ndash; 让 tomcat包打印日志 日志ERROR 减少日志输出 &ndash;&gt;-->
        <!--    <logger name="org.apache" level="ERROR" additivity="false">-->
        <!--        <appender-ref ref="STOUT"/>-->
        <!--    </logger>-->

        <!--    &lt;!&ndash; 我们自己开发的程序为DEBUG &ndash;&gt;-->
        <!--    <logger name="com.redpig" level="DEBUG" additivity="false">-->
        <!--        <appender-ref ref="STOUT"/>-->
        <!--    </logger>-->


        <!--    <logger name="com.baomidou" level="ERROR" additivity="false">-->
        <!--        <appender-ref ref="STOUT"/>-->
        <!--    </logger>-->

        <!--    <logger name="com.zaxxer" level="ERROR" additivity="false">-->
        <!--        <appender-ref ref="STOUT"/>-->
        <!--    </logger>-->

        <!--    &lt;!&ndash; Activiti日志 &ndash;&gt;-->
        <!--    <logger name="org.activiti" level="ERROR" />-->
        <!--    <logger name="org.activiti.engine.impl.persistence.entity" level="DEBUG" />-->
        <!--    <logger name="_org.springframework" level="ERROR" />-->
        <!--    <logger name="springfox.documentation" level="ERROR" />-->

        <!--    &lt;!&ndash; root级别开debug 子目录根据需要关闭 &ndash;&gt;-->
        <!--    <root level="DEBUG">-->
        <!--        <appender-ref ref="STOUT"/>-->
        <!--    </root>-->
        <!--</configuration>-->